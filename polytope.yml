templates:
- id: stack
  run:
  - api
  - couchbase
  - init-couchbase
  - frontend

modules:
  - id: api
    module: polytope/python
    params:
      - id: dev-mode
        info: Whether to run in dev mode (with hot reload, debugging).
        type: [default, bool, true]
    args:
      id: api
      image: public.ecr.aws/docker/library/python:3.13-slim-bookworm
      code: { type: host, path: api }
      cmd: ./bin/run
      restart:
        policy: always
      services:
        - { id: api, ports: [{protocol: http, port: 3001, expose-as: 3001}] }
      env:
        - { name: HTTP_PORT, value: 3001 }
        - { name: LOG_LEVEL, value: INFO }
        - { name: HTTP_DEBUG, value: "#pt-param dev-mode" }
        - { name: HTTP_AUTORELOAD, value: "#pt-param dev-mode" }
        - { name: OPPER_API_KEY, value: "#pt-secret opper-api-key" }
        - { name: COUCHBASE_URL, value: couchbase://couchbase }
        - { name: COUCHBASE_USERNAME, value: user }
        - { name: COUCHBASE_PASSWORD, value: password }
        - { name: COUCHBASE_BUCKET, value: main }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache } }
        - { path: /root/conf/, source: { type: host, path: ./conf } }

  - id: frontend
    module: polytope/node
    args:
      id: frontend
      image: node:22-bullseye-slim
      code: { type: host, path: ./frontend }
      cmd: ./bin/run
      env:
        - { name: PORT, value: 3000 }
        - { name: REACT_APP_API_BASE_URL, value: "http://localhost:3001" }
        - { name: PUBLIC_URL, value: "http://localhost:3000" }
      restart:
        policy: always
      services:
        - id: frontend
          ports: [{protocol: http, port: 3000}]
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/.npm/, source: { type: volume, scope: project, id: npm-cache }}
        - { path: /app/node_modules/, source: { type: volume, scope: project, id: npm-modules }}

  - id: init-couchbase
    params:
    module: polytope/python
    args:
      image: gcr.io/arched-inkwell-420116/python:3.11.8-slim-bookworm
      id: init-couchbase
      code: { type: host, path: ./util/init-couchbase }
      cmd: ./bin/run
      restart: { policy: on-failure }
      env:
        - { name: COUCHBASE_HOST, value: couchbase }
        - { name: COUCHBASE_USERNAME, value: user }
        - { name: COUCHBASE_PASSWORD, value: password }
        - { name: COUCHBASE_MAIN_BUCKET_NAME, value: main }
      mounts:
        - { path: /root/.cache/, source: { type: volume, scope: project, id: dependency-cache }}
        - { path: /root/conf/, source: { type: host, path: ./conf/components/couchbase }}

  - id: couchbase
    module: polytope/couchbase
    args:
      image: gcr.io/arched-inkwell-420116/couchbase:enterprise-7.6.1
      data-volume: { type: volume, scope: project, id: couchbase-data }
